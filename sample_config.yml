#
# This file configures the NewRelic RPM Agent, NewRelic RPM monitors Rails 
# applications with deep visibility and low overhead.  For more information, 
# visit www.newrelic.com.
#

# here are the settings that are common to all environments
common: &default_settings
  # ============================== LICENSE KEY ===============================
  # You must specify the licence key sent to you by New Relic for your agent to
  # communicate with the New Relic RPM service.  Paste the license key in the
  # line below
  license_key: 'PASTE_YOUR_KEY_HERE'
    
  # the 'enabled' setting is used to turn on the NewRelic Agent.  When false,
  # your application is not instrumented and the Agent does not start up or
  # collect any data; it is a complete shut-off.
  #
  # when turned on, the agent collects performance data by inserting lightweight
  # tracers on key methods inside the rails framework and asynchronously aggregating
  # and reporting this performance data to the server sepecified at host and port
  # below.  The agent is highly tuned and desgined to operate at very low overhead
  # so you can run it all the time in production.
  enabled: false

  # The newrelic agent generates its own log file to keep its logging information
  # separate from that of your application.  Specify its log level here.
  log_level: info
  
  # specify the host and port of the server that the NewRelic Agent communicates with
  # you shouldn't need to modify this.
  # TODO replace with rpm.newrelic.com when ready
  host: 65.74.180.22
  port: 80
  

# override default settings based on your application's environment

development:
  <<: *default_settings
  # turn off in development.
  # NOTE: for initial evaluation purposes, you may want to temporarily turn
  # the agent on in developmen mode.
  enabled: false

test:
  <<: *default_settings
  # it almost never makes sense to turn on the agent when running unit, functional or
  # integration tests or the like.
  enabled: false

# Turn on the agent in production for 24x7 monitoring.  NewRelic testing shows
# an average performance impact of 1-2ms on a 30 ms transaction, you you can leave this on
# all the time without incurring any user-visible performance degredation.
production:
  <<: *default_settings
  enabled: true

